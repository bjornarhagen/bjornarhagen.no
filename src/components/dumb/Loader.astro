---
type ProgressIndicatorStyle = {
    frames: string[];
    interval: number;
};

const styles = {
    arrow: {
        frames: ["РєЉ", "РєЌ", "Рєњ", "Рєў", "РєЊ", "РєЎ", "Рєљ", "Рєќ"],
        interval: 100,
    },
    ball_wave: {
        frames: ["­ЊЃЅ­ЊЃЅ­ЊЃЅ", "­ЊЃЅ­ЊЃЅРѕў", "­ЊЃЅРѕў┬░", "Рѕў┬░Рѕў", "┬░Рѕў­ЊЃЅ", "Рѕў­ЊЃЅ­ЊЃЅ"],
        interval: 100,
    },
    blocks1: {
        frames: ["РќЉ", "Рќњ", "РќЊ", "Рќѕ"],
        interval: 100,
    },
    blocks2: {
        frames: ["РќЏ", "Рќю", "РќЪ", "РќЎ"],
        interval: 100,
    },
    cym: {
        frames: ["РіЈ", "РіЊ", "Ріљ", "Ріћ"],
        interval: 100,
    },
    dots1: {
        frames: ["РБЙ", "РБй", "РБ╗", "Рб┐", "РА┐", "РБЪ", "РБ»", "РБи"],
        interval: 50,
    },
    dots2: {
        frames: ["РаІ", "РаЎ", "Ра╣", "РаИ", "Ра╝", "Ра┤", "Рад", "РаД", "РаЄ", "РаЈ"],
        interval: 50,
    },
    dots3: {
        frames: ["РаІ", "РаЎ", "Раџ", "Раъ", "Раќ", "Рад", "Ра┤", "Ра▓", "Ра│", "РаЊ"],
        interval: 50,
    },
    dots4: {
        frames: [
            "Раё",
            "Рає",
            "РаЄ",
            "РаІ",
            "РаЎ",
            "РаИ",
            "Ра░",
            "Раа",
            "Ра░",
            "РаИ",
            "РаЎ",
            "РаІ",
            "РаЄ",
            "Рає",
        ],
        interval: 50,
    },
    dots5: {
        frames: [
            "РаІ",
            "РаЎ",
            "Раџ",
            "Рањ",
            "Раѓ",
            "Раѓ",
            "Рањ",
            "Ра▓",
            "Ра┤",
            "Рад",
            "Раќ",
            "Рањ",
            "Раљ",
            "Раљ",
            "Рањ",
            "РаЊ",
            "РаІ",
        ],
        interval: 50,
    },
    dots6: {
        frames: [
            "РаЂ",
            "РаЅ",
            "РаЎ",
            "Раџ",
            "Рањ",
            "Раѓ",
            "Раѓ",
            "Рањ",
            "Ра▓",
            "Ра┤",
            "Рац",
            "Раё",
            "Раё",
            "Рац",
            "Ра┤",
            "Ра▓",
            "Рањ",
            "Раѓ",
            "Раѓ",
            "Рањ",
            "Раџ",
            "РаЎ",
            "РаЅ",
            "РаЂ",
        ],
        interval: 50,
    },
    dots7: {
        frames: [
            "Раѕ",
            "РаЅ",
            "РаІ",
            "РаЊ",
            "Рањ",
            "Раљ",
            "Раљ",
            "Рањ",
            "Раќ",
            "Рад",
            "Рац",
            "Раа",
            "Раа",
            "Рац",
            "Рад",
            "Раќ",
            "Рањ",
            "Раљ",
            "Раљ",
            "Рањ",
            "РаЊ",
            "РаІ",
            "РаЅ",
            "Раѕ",
        ],
        interval: 50,
    },
    dots8: {
        frames: [
            "РаЂ",
            "РаЂ",
            "РаЅ",
            "РаЎ",
            "Раџ",
            "Рањ",
            "Раѓ",
            "Раѓ",
            "Рањ",
            "Ра▓",
            "Ра┤",
            "Рац",
            "Раё",
            "Раё",
            "Рац",
            "Раа",
            "Раа",
            "Рац",
            "Рад",
            "Раќ",
            "Рањ",
            "Раљ",
            "Раљ",
            "Рањ",
            "РаЊ",
            "РаІ",
            "РаЅ",
            "Раѕ",
            "Раѕ",
        ],
        interval: 50,
    },
    dots9: {
        frames: ["Рб╣", "Рб║", "Рб╝", "РБИ", "РБЄ", "РАД", "РАЌ", "РАЈ"],
        interval: 50,
    },
    dots10: {
        frames: ["Рбё", "Рбѓ", "РбЂ", "РАЂ", "РАѕ", "РАљ", "РАа"],
        interval: 50,
    },
    dots11: {
        frames: ["РаЂ", "Раѓ", "Раё", "РАђ", "Рбђ", "Раа", "Раљ", "Раѕ"],
        interval: 50,
    },
    emoji_blink: {
        frames: [
            "­Ъўљ",
            "­Ъўљ",
            "­Ъўљ",
            "­Ъўљ",
            "­Ъўљ",
            "­Ъўљ",
            "­Ъўљ",
            "­Ъўљ",
            "­Ъўљ",
            "­Ъўљ",
            "­ЪўЉ",
        ],
        interval: 100,
    },
    emoji_bomb: {
        frames: [
            "­ЪњБ   ",
            " ­ЪњБ  ",
            "  ­ЪњБ ",
            "   ­ЪњБ",
            "   ­ЪњБ",
            "   ­ЪњБ",
            "   ­ЪњБ",
            "   ­ЪњБ",
            "   ­ЪњЦ",
            "    ",
            "    ",
        ],
        interval: 100,
    },
    emoji_earth: {
        frames: ["­ЪїЇ", "­Ъїј", "­ЪїЈ"],
        interval: 200,
    },
    emoji_hour: {
        frames: [
            "­ЪЋЏ",
            "­ЪЋљ",
            "­ЪЋЉ",
            "­ЪЋњ",
            "­ЪЋЊ",
            "­ЪЋћ",
            "­ЪЋЋ",
            "­ЪЋќ",
            "­ЪЋЌ",
            "­ЪЋў",
            "­ЪЋЎ",
            "­ЪЋџ",
        ],
        interval: 100,
    },
    emoji_moon: {
        frames: ["­ЪїЉ", "­Ъїњ", "­ЪїЊ", "­Ъїћ", "­ЪїЋ", "­Ъїќ", "­ЪїЌ", "­Ъїў"],
        interval: 200,
    },
    line: {
        frames: ["Рў░", "Рў▒", "Рў│", "Рўи", "РўХ", "Рў┤"],
        interval: 100,
    },
    old: {
        frames: ["Рђћ", "\\", "|", "/"],
        interval: 100,
    },
    x_plus: {
        frames: ["├Ќ", "+"],
        interval: 100,
    },
} satisfies Record<string, ProgressIndicatorStyle>;

type Props = {
    style: keyof typeof styles;
};

const { style }: Props = Astro.props;

if (!styles[style]) {
    throw new Error("Invalid style name");
}

const { frames, interval } = styles[style];
---

<div
    id={`progress-${style}`}
    class="font-mono pointer-events-none text-center user-select-none whitespace-pre w-6"
>
    {frames[0]}
</div>

<script define:vars={{ style, frames, interval }}>
    let index = 0;
    let intervalId;

    function startAnimation() {
        const element = document.querySelector(`#progress-${style}`);
        intervalId = setInterval(() => {
            index = (index + 1) % frames.length;
            if (element) {
                element.textContent = frames[index];
            }
        }, interval);
    }

    function stopAnimation() {
        if (intervalId) {
            clearInterval(intervalId);
        }
    }

    // Start animation when the component is loaded
    startAnimation();

    // Clean up on component unmount
    window.addEventListener("beforeunload", stopAnimation);
</script>
